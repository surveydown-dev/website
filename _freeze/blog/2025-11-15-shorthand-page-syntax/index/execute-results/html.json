{
  "hash": "a82905770e861fd347e12aeb03e4e0b3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introducing Shorthand Page Syntax in v0.14.0\"\nauthor:\n  - name: John Paul Helveston\ndescription: |\n  Introducing a new shorthand syntax for page definition to make your survey code cleaner and easier to read.\ndate: '2025-11-01'\nimage: \"banner.png\"\ncategories:\n  - R\n  - package\n  - syntax\n  - feature\nformat: html\nexecute:\n  eval: false\ntoc: true\nlightbox: true\n---\n\n\nWe are excited to announce a significant improvement to the surveydown developer experience in package version 0.14.0: **shorthand page syntax**. This new syntax makes defining pages in your surveys dramatically cleaner and easier to read, while maintaining full backward compatibility with the existing fence syntax.\n\n## The Problem: Verbose Fence Syntax\n\nSince the beginning, surveydown has used Quarto's fence syntax (three colons `:::`) to define pages. While this approach works well and leverages familiar Quarto conventions, it requires explicit opening and closing tags for every page:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n::: {.sd_page id=welcome}\n\nWelcome to our survey!\n\n:::\n\n::: {.sd_page id=demographics}\n\nPlease tell us about yourself.\n\n:::\n\n::: {.sd_page id=questions}\n\nNow for the main questions...\n\n:::\n```\n:::\n\n\nAs your surveys grow, these closing `:::` tags add visual clutter and make it harder to see where one page ends and another begins. You also need to remember to close every page - forgetting a closing fence can cause parsing errors.\n\n## The Solution: Shorthand Syntax\n\nWith surveydown package version 0.14.0, we're introducing a new **shorthand syntax** that eliminates the need for closing tags. Instead, you simply use three dashes `---` followed by the page ID:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n--- welcome\n\nWelcome to our survey!\n\n--- demographics\n\nPlease tell us about yourself.\n\n--- questions\n\nNow for the main questions...\n```\n:::\n\n\nThat's it! Each new page delimiter automatically closes the previous page, so there's no need to track opening and closing tags. The syntax is cleaner, more concise, and easier to scan visually.\n\nThe shorthand syntax offers several advantages:\n\n1. **Cleaner code**: Eliminates visual clutter from closing tags\n2. **Easier to scan**: Page delimiters stand out clearly, making survey structure obvious\n3. **Less typing**: Fewer characters to type means faster survey development\n4. **Fewer errors**: No need to remember closing tags - can't forget what doesn't exist!\n5. **Better git diffs**: When you add or modify pages, diffs are cleaner without closing tag changes\n\n## Example\n\nLet's look at another survey example to see the improvement. Here's the same survey written both ways:\n\n::: {.panel-tabset}\n\n## Fence Syntax (Old)\n\n\n::: {.cell}\n\n````{.r .cell-code}\n---\nformat: html\necho: false\n---\n\n```{r}\nlibrary(surveydown)\n```\n\n::: {.sd_page id=welcome}\n\n# Welcome!\n\nThank you for participating in our study.\n\n```{r}\nsd_next()\n```\n\n:::\n\n::: {.sd_page id=consent}\n\n## Informed Consent\n\nPlease read the following information carefully...\n\n```{r}\nsd_question(\n  type = 'mc',\n  id = 'consent',\n  label = \"Do you consent to participate?\",\n  option = c(\n    'Yes, I consent' = 'yes',\n    'No, I decline' = 'no'\n  )\n)\n\nsd_next()\n```\n\n:::\n\n::: {.sd_page id=demographics}\n\n## Demographics\n\n```{r}\nsd_question(\n  type = 'numeric',\n  id = 'age',\n  label = \"What is your age?\"\n)\n\nsd_question(\n  type = 'mc',\n  id = 'education',\n  label = \"What is your highest level of education?\",\n  option = c(\n    'High school' = 'hs',\n    'Bachelor\\'s degree' = 'ba',\n    'Graduate degree' = 'grad'\n  )\n)\n\nsd_next()\n```\n\n:::\n\n::: {.sd_page id=survey_questions}\n\n## Main Questions\n\n```{r}\nsd_question(\n  type = 'mc',\n  id = 'satisfaction',\n  label = \"How satisfied are you with our product?\",\n  option = c(\n    'Very satisfied' = '5',\n    'Satisfied' = '4',\n    'Neutral' = '3',\n    'Dissatisfied' = '2',\n    'Very dissatisfied' = '1'\n  )\n)\n\nsd_next()\n```\n\n:::\n\n::: {.sd_page id=end}\n\n## Thank You!\n\nYour responses have been recorded. You may now close this window.\n\n```{r}\nsd_close()\n```\n\n:::\n````\n:::\n\n\n## Shorthand Syntax (New)\n\n\n::: {.cell}\n\n````{.r .cell-code}\n---\nformat: html\necho: false\n---\n\n```{r}\nlibrary(surveydown)\n```\n\n--- welcome\n\n# Welcome!\n\nThank you for participating in our study.\n\n```{r}\nsd_next()\n```\n\n--- consent\n\n## Informed Consent\n\nPlease read the following information carefully...\n\n```{r}\nsd_question(\n  type = 'mc',\n  id = 'consent',\n  label = \"Do you consent to participate?\",\n  option = c(\n    'Yes, I consent' = 'yes',\n    'No, I decline' = 'no'\n  )\n)\n\nsd_next()\n```\n\n--- demographics\n\n## Demographics\n\n```{r}\nsd_question(\n  type = 'numeric',\n  id = 'age',\n  label = \"What is your age?\"\n)\n\nsd_question(\n  type = 'mc',\n  id = 'education',\n  label = \"What is your highest level of education?\",\n  option = c(\n    'High school' = 'hs',\n    'Bachelor\\'s degree' = 'ba',\n    'Graduate degree' = 'grad'\n  )\n)\n\nsd_next()\n```\n\n--- survey_questions\n\n## Main Questions\n\n```{r}\nsd_question(\n  type = 'mc',\n  id = 'satisfaction',\n  label = \"How satisfied are you with our product?\",\n  option = c(\n    'Very satisfied' = '5',\n    'Satisfied' = '4',\n    'Neutral' = '3',\n    'Dissatisfied' = '2',\n    'Very dissatisfied' = '1'\n  )\n)\n\nsd_next()\n```\n\n--- end\n\n## Thank You!\n\nYour responses have been recorded. You may now close this window.\n\n```{r}\nsd_close()\n```\n````\n:::\n\n\n:::\n\nNotice how much cleaner the shorthand version is? The page boundaries are immediately visible, and there's no visual clutter from closing tags. Your survey structure becomes easier to understand at a glance.\n\n## Backward Compatibility\n\nWe want to emphasize that **both syntaxes work perfectly** in v0.14.0 and beyond. Your existing surveys using fence syntax will continue to work without any changes. We're introducing shorthand syntax as the **recommended** approach going forward, but you're free to use whichever style you prefer.\n\n::: {.callout-caution}\n\nBe careful not to mix both syntaxes within the same survey. Each survey must define pages using either the fence syntax or shorthand syntax exclusively.\n\n:::\n\n## Updated Documentation\n\nAll of our documentation has been updated to use the new shorthand syntax as the primary example. However, we've kept documentation for both approaches:\n\n- The [Page Navigation](https://surveydown.org/docs/page-navigation.html#defining-pages) page explains both syntaxes in detail\n- The [Basic Components](https://surveydown.org/docs/basic-components.html#defining-pages) page introduces shorthand syntax\n- All our [templates](https://surveydown.org/templates.html) will be updated to use shorthand syntax\n\n## Migration Guide\n\nThe good news is you do not need to change anything in your existing surveys. They will continue to work as before. However, if you want to take advantage of the cleaner shorthand syntax, migrating is easy:\n\n1. Replace `::: {.sd_page id=PAGE_ID}` with `--- PAGE_ID`\n2. Remove all closing `:::` tags\n3. Make sure each page starts with `---` followed by a space and the page ID\n\nFor example, convert this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n::: {.sd_page id=page1} \n\nContent here\n\n:::\n\n::: {.sd_page id=page2}\n\nMore content\n\n:::\n```\n:::\n\n\nTo this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n--- page1\n\nContent here\n\n--- page2\n\nMore content\n```\n:::\n\n\nThat's all there is to it!\n\n## Looking Forward\n\nThis improvement is part of our ongoing effort to make surveydown as developer-friendly as possible. We're constantly listening to user feedback and looking for ways to reduce friction in the survey development process.\n\nIf you have suggestions for future improvements, please let us know through [GitHub Discussions](https://github.com/orgs/surveydown-dev/discussions) or by filing an issue on our [GitHub repository](https://github.com/surveydown-dev/surveydown).\n\n## Getting Started\n\nTo start using the shorthand syntax, simply update to surveydown v0.14.0 or later:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install from CRAN (once 0.14.0 is released)\ninstall.packages(\"surveydown\")\n\n# Or install the development version from GitHub\npak::pak(\"surveydown-dev/surveydown\")\n```\n:::\n\n\nThen start using `---` followed by your page IDs in your survey.qmd files. It's that simple!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}